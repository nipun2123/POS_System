/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Databases.DB;
import Databases.Table.SupplierManager;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nipun
 */
public class Supplier extends javax.swing.JPanel {

    private static Supplier instance;

    public static synchronized Supplier getInstance() {
        if (instance == null) {
            instance = new Supplier();
        }
        return instance;
    }

    /**
     * Creates new form Supplier
     */
    public Supplier() {
        initComponents();

        editBtn.setText("<html> වෙනස් <br> කරන්න</html>");

        supplierTable.getTableHeader().setFont(new Font("Nirmala UI", 1, 17));

        loadTable();
        if (supplierTable.getRowCount() != 0) {
            supplierTable.setRowSelectionInterval(0, 0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierTable = new javax.swing.JTable();
        searchCombo = new javax.swing.JComboBox<>();
        searchTxt = new javax.swing.JTextField();
        loadCombo = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        sortCombo = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setBackground(new java.awt.Color(234, 249, 244));
        setMinimumSize(new java.awt.Dimension(1216, 708));
        setPreferredSize(new java.awt.Dimension(1216, 708));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(234, 249, 244));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jButton1.setText("අලුත්");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 3, -1, 45));

        editBtn.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        editBtn.setText("වෙනස් කරන්න");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        jPanel1.add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 3, -1, 45));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1200, 50));

        jPanel2.setBackground(new java.awt.Color(234, 249, 244));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        supplierTable.setFont(new java.awt.Font("Nirmala UI", 0, 16)); // NOI18N
        supplierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "කේතය", "ආයතන නාමය", "නියෝජිතයාගේ නම", "දූරකථන අංකය1", "දූරකථන අංකය2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        supplierTable.setRowHeight(22);
        supplierTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supplierTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(supplierTable);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 72, 1150, 510));

        searchCombo.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        searchCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "සමාගමේ නම අනුව සොයන්න", "කේතය අනුව සොයන්න" }));
        searchCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchComboActionPerformed(evt);
            }
        });
        jPanel2.add(searchCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 260, 30));

        searchTxt.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        searchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxtActionPerformed(evt);
            }
        });
        searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTxtKeyTyped(evt);
            }
        });
        jPanel2.add(searchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 270, 30));

        loadCombo.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        loadCombo.setOpaque(false);
        loadCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadComboActionPerformed(evt);
            }
        });
        jPanel2.add(loadCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 270, 30));

        jButton2.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jButton2.setText("පෙර පරිදි සකසන්න");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 170, 30));

        sortCombo.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        sortCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "සාමාන්‍ය ලෙස සකසන්න", "සමාගමේ නම අනුව සකසන්න", "කේතය අනුව සකසන්න" }));
        sortCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortComboActionPerformed(evt);
            }
        });
        jPanel2.add(sortCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 20, 210, 30));

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 20, 30, 30));

        jButton6.setFont(new java.awt.Font("Nirmala UI", 1, 17)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Print.png"))); // NOI18N
        jButton6.setText("Print");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 590, 110, 40));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1200, 640));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AddSupplierFrame frame = AddSupplierFrame.getInstance();
        frame.clearFeilds();
        frame.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void supplierTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierTableMouseClicked

        if (evt.getClickCount() == 2) {
            int selectedRow = supplierTable.getSelectedRow();

            DefaultTableModel dtm = (DefaultTableModel) supplierTable.getModel();

            String selectCode = (String) dtm.getValueAt(selectedRow, 0);

            AddSupplierFrame frame = AddSupplierFrame.getInstance();
            frame.loadAddedSupplier(selectCode);
            frame.isEditing = true;
            frame.setVisible(true);
        }

    }//GEN-LAST:event_supplierTableMouseClicked

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed

        int selectedRow = supplierTable.getSelectedRow();

        if (selectedRow != -1) {

            DefaultTableModel dtm = (DefaultTableModel) supplierTable.getModel();

            String selectCode = (String) dtm.getValueAt(selectedRow, 0);

            AddSupplierFrame frame = AddSupplierFrame.getInstance();
            frame.loadAddedSupplier(selectCode);
            frame.isEditing = true;
            frame.setVisible(true);

        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void searchTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtKeyTyped


    }//GEN-LAST:event_searchTxtKeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        DefaultTableModel dtm = (DefaultTableModel) supplierTable.getModel();
        dtm.setRowCount(0);

        if (searchCombo.getSelectedItem().toString().trim().equals("සමාගමේ නම අනුව සොයන්න")) {
            try {
                ResultSet result = SupplierManager.getAllFromCompany(searchTxt.getText().trim());
                if (result.next()) {
                    Vector v = new Vector();
                    v.add(result.getString("code"));
                    v.add(result.getString("company"));
                    v.add(result.getString("agent_fname") + " " + result.getString("agent_lname"));
                    v.add(result.getString("contact_number1"));
                    v.add(result.getString("contact_number2"));

                    dtm.addRow(v);
                }
            } catch (SQLException ex) {
                DB.processException(ex);
            }

        } else {
            try {
                ResultSet result = SupplierManager.getAllFromCode(searchTxt.getText().trim());
                if (result.next()) {
                    Vector v = new Vector();
                    v.add(result.getString("code"));
                    v.add(result.getString("company"));
                    v.add(result.getString("agent_fname") + " " + result.getString("agent_lname"));
                    v.add(result.getString("contact_number1"));
                    v.add(result.getString("contact_number2"));

                    dtm.addRow(v);
                }
            } catch (SQLException ex) {
                DB.processException(ex);
            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void searchComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchComboActionPerformed
        searchTxt.setText(null);
    }//GEN-LAST:event_searchComboActionPerformed

    private void loadComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadComboActionPerformed

    }//GEN-LAST:event_loadComboActionPerformed
    int i = 0;
    int x = 0;
    private void searchTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtKeyReleased
        if (searchTxt.getText().isEmpty()) {
            loadTable();
            loadCombo.hidePopup();
            searchTxt.setText(null);
        }
        try {
            DefaultTableModel dtm = (DefaultTableModel) supplierTable.getModel();

            if (searchCombo.getSelectedItem().toString().trim().equals("සමාගමේ නම අනුව සොයන්න")) {
                Vector v = new Vector();
                ResultSet rs_nic = SupplierManager.getAllLikeCompany(searchTxt.getText().trim());
                while (rs_nic.next()) {
                    v.add(rs_nic.getString("company"));
                }
                DefaultComboBoxModel dcb = new DefaultComboBoxModel(v);
                loadCombo.setModel(dcb);

                if (loadCombo.getItemCount() != 0) {
                    loadCombo.showPopup();

                    int c = loadCombo.getItemCount();
                    if (evt.getKeyCode() == 40) {
                        i++;
                        if (i == c) {
                            i = 0;
                        }
                        loadCombo.setSelectedIndex(i);
                    }

                    if (evt.getKeyCode() == 38) {
                        i--;
                        if (i == -1) {
                            i = c - 1;
                        }
                        loadCombo.setSelectedIndex(i);
                    }

                    if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                        loadCombo.setSelectedIndex(i);
                        loadCombo.hidePopup();
                        i = 0;
                        dtm.setRowCount(0);
                        searchTxt.setText(loadCombo.getSelectedItem().toString());
                        ResultSet rs_tbl = SupplierManager.getAllFromCompany(searchTxt.getText().trim());
                        if (rs_tbl.next()) {
                            Vector v1 = new Vector();
                            v1.add(rs_tbl.getString("code"));
                            v1.add(rs_tbl.getString("company"));
                            v1.add(rs_tbl.getString("agent_fname") + " " + rs_tbl.getString("agent_lname"));
                            v1.add(rs_tbl.getString("contact_number1"));
                            v1.add(rs_tbl.getString("contact_number2"));

                            dtm.addRow(v1);
                        }
                    }
                }

            }

        } catch (Exception e) {
            DB.processException(e);
        }

        try {
            DefaultTableModel dtm = (DefaultTableModel) supplierTable.getModel();
            if (searchCombo.getSelectedItem().toString().trim().equals("කේතය අනුව සොයන්න")) {

                Vector v = new Vector();
                ResultSet rs_tp = SupplierManager.getAllLikeCode(searchTxt.getText().trim());
                while (rs_tp.next()) {
                    v.add(rs_tp.getString("code"));
                }
                DefaultComboBoxModel dcb = new DefaultComboBoxModel(v);
                loadCombo.setModel(dcb);
                if (loadCombo.getItemCount() != 0) {

                    loadCombo.showPopup();
                    int c = loadCombo.getItemCount();
                    if (evt.getKeyCode() == 40) {
                        x++;
                        if (x == c) {
                            x = 0;
                        }
                        loadCombo.setSelectedIndex(x);
                    }

                    if (evt.getKeyCode() == 38) {
                        x--;
                        if (x == -1) {
                            x = c - 1;
                        }
                        loadCombo.setSelectedIndex(x);
                    }
                    if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                        loadCombo.setSelectedIndex(x);
                        loadCombo.hidePopup();
                        x = 0;
                        dtm.setRowCount(0);
                        searchTxt.setText(loadCombo.getSelectedItem().toString());
                        ResultSet rs_tbl = SupplierManager.getAllFromCode(searchTxt.getText().trim());
                        if (rs_tbl.next()) {
                            Vector v1 = new Vector();
                            v1.add(rs_tbl.getString("code"));
                            v1.add(rs_tbl.getString("company"));
                            v1.add(rs_tbl.getString("agent_fname") + " " + rs_tbl.getString("agent_lname"));
                            v1.add(rs_tbl.getString("contact_number1"));
                            v1.add(rs_tbl.getString("contact_number2"));

                            dtm.addRow(v1);

                        }
                    }
                }
            }

        } catch (Exception e) {
            DB.processException(e);
        }
    }//GEN-LAST:event_searchTxtKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        loadTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void sortComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortComboActionPerformed
        loadTable();
    }//GEN-LAST:event_sortComboActionPerformed

    private void searchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTxtActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
      try {
          MessageFormat header = new MessageFormat("Supplier Report");
          supplierTable.print(JTable.PrintMode.FIT_WIDTH,header,null); 

        } catch (java.awt.print.PrinterException e) {
     System.err.format("Cannot print %s%n", e.getMessage()); 
}
    }//GEN-LAST:event_jButton6ActionPerformed

    public void loadTable() {
        searchTxt.setText(null);
        DefaultTableModel dtm = (DefaultTableModel) supplierTable.getModel();
        dtm.setRowCount(0);

        if (sortCombo.getSelectedItem().equals("සාමාන්‍ය ලෙස සකසන්න")) {

            ResultSet result1 = SupplierManager.getAllSupplier();
            try {

                while (result1.next()) {
                    Vector v = new Vector();

                    v.add(result1.getString("code"));
                    v.add(result1.getString("company"));
                    v.add(result1.getString("agent_fname") + " " + result1.getString("agent_lname"));
                    v.add(result1.getString("contact_number1"));
                    v.add(result1.getString("contact_number2"));

                    dtm.addRow(v);
                }

            } catch (SQLException ex) {
                DB.processException(ex);
            }

        } else if (sortCombo.getSelectedItem().equals("සමාගමේ නම අනුව සකසන්න")) {

            ResultSet result1 = SupplierManager.getAllSupplierOrderCompany();
            try {

                while (result1.next()) {
                    Vector v = new Vector();

                    v.add(result1.getString("code"));
                    v.add(result1.getString("company"));
                    v.add(result1.getString("agent_fname") + " " + result1.getString("agent_lname"));
                    v.add(result1.getString("contact_number1"));
                    v.add(result1.getString("contact_number2"));

                    dtm.addRow(v);
                }

            } catch (SQLException ex) {
                DB.processException(ex);
            }

        } else if (sortCombo.getSelectedItem().equals("කේතය අනුව සකසන්න")) {

            ResultSet result1 = SupplierManager.getAllSupplierOrderCode();
            try {

                while (result1.next()) {
                    Vector v = new Vector();

                    v.add(result1.getString("code"));
                    v.add(result1.getString("company"));
                    v.add(result1.getString("agent_fname") + " " + result1.getString("agent_lname"));
                    v.add(result1.getString("contact_number1"));
                    v.add(result1.getString("contact_number2"));

                    dtm.addRow(v);
                }

            } catch (SQLException ex) {
                DB.processException(ex);
            }

        }

//        supplierTable.setRowSelectionInterval(dtm.getRowCount()-1, dtm.getRowCount()-1);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> loadCombo;
    private javax.swing.JComboBox<String> searchCombo;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JComboBox<String> sortCombo;
    private javax.swing.JTable supplierTable;
    // End of variables declaration//GEN-END:variables
}
