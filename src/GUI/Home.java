/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Databases.Table.MostSellItemManagment;
import Databases.Table.ProfitManagment;
import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.temporal.WeekFields;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author nipun
 */
public class Home extends javax.swing.JPanel {

    private static Home instance;

    public static synchronized Home getInstance() {
        if (instance == null) {
            instance = new Home();
        }
        return instance;
    }

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();

        gererateProfitOfToday();

        generateMostSellingOfWeek();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        profitTo = new com.toedter.calendar.JDateChooser();
        profitFrom = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        profitLabel = new javax.swing.JLabel();
        profitPanel = new javax.swing.JPanel();
        incomeLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        outcomeLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        panel2 = new javax.swing.JPanel();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        itemfrom = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        itemto = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        mostSellPanel = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(234, 249, 244));
        setMinimumSize(new java.awt.Dimension(1216, 708));
        setPreferredSize(new java.awt.Dimension(1216, 708));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N

        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jRadioButton1.setText("මෙම මාසය");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        panel1.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("අද දින");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        panel1.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jRadioButton3.setText("මෙම අවුරුද්ද");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        panel1.add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        profitTo.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        profitTo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                profitToFocusLost(evt);
            }
        });
        profitTo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                profitToPropertyChange(evt);
            }
        });
        profitTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                profitToKeyReleased(evt);
            }
        });
        panel1.add(profitTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 130, 30));

        profitFrom.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        profitFrom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                profitFromFocusLost(evt);
            }
        });
        profitFrom.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                profitFromPropertyChange(evt);
            }
        });
        profitFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                profitFromKeyReleased(evt);
            }
        });
        panel1.add(profitFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, 130, 30));

        jLabel2.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jLabel2.setText("දක්වා");
        panel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 20, -1, 30));

        jLabel3.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jLabel3.setText("සිට");
        panel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 20, -1, 30));

        jButton1.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jButton1.setText("සොයන්න");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        panel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 20, 130, 30));
        panel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1100, 20));

        profitLabel.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        panel1.add(profitLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 100, 220, 40));

        profitPanel.setLayout(new java.awt.BorderLayout());
        panel1.add(profitPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 1140, 440));

        incomeLabel.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        panel1.add(incomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 210, 40));

        jLabel5.setFont(new java.awt.Font("Nirmala UI", 1, 17)); // NOI18N
        jLabel5.setText("ආදායම = ");
        panel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 90, 40));

        outcomeLabel.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        panel1.add(outcomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 220, 40));

        jLabel7.setFont(new java.awt.Font("Nirmala UI", 1, 17)); // NOI18N
        jLabel7.setText(" ලාභය = ");
        panel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 100, 80, 40));

        jLabel8.setFont(new java.awt.Font("Nirmala UI", 1, 17)); // NOI18N
        jLabel8.setText("වියදම = ");
        panel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, 70, 40));

        jTabbedPane1.addTab("ආදායම", panel1);

        panel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jRadioButton4.setSelected(true);
        jRadioButton4.setText("මෙම සතිය");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });
        panel2.add(jRadioButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        buttonGroup2.add(jRadioButton5);
        jRadioButton5.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jRadioButton5.setText("මෙම අවුරුද්ද");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });
        panel2.add(jRadioButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        buttonGroup2.add(jRadioButton6);
        jRadioButton6.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jRadioButton6.setText("මෙම මාසය");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });
        panel2.add(jRadioButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, -1, -1));

        jLabel4.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jLabel4.setText("සිට");
        panel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 20, -1, 30));

        itemfrom.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        itemfrom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemfromFocusLost(evt);
            }
        });
        itemfrom.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                itemfromPropertyChange(evt);
            }
        });
        itemfrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemfromKeyReleased(evt);
            }
        });
        panel2.add(itemfrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, 130, 30));

        jLabel6.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jLabel6.setText("දක්වා");
        panel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 20, -1, 30));

        itemto.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        itemto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemtoFocusLost(evt);
            }
        });
        itemto.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                itemtoPropertyChange(evt);
            }
        });
        itemto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemtoKeyReleased(evt);
            }
        });
        panel2.add(itemto, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 130, 30));

        jButton2.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jButton2.setText("සොයන්න");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        panel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 20, 130, 30));

        mostSellPanel.setLayout(new java.awt.BorderLayout());
        panel2.add(mostSellPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1160, 530));
        panel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1100, 20));

        jTabbedPane1.addTab("වැඩිපුරම විකුණූ භාණ්ඩ", panel2);

        add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 1170, 680));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        generateProfitFromTo(sdf.format(profitFrom.getDate()), sdf.format(profitTo.getDate()));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void profitFromKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_profitFromKeyReleased

    }//GEN-LAST:event_profitFromKeyReleased

    private void profitFromPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_profitFromPropertyChange

    }//GEN-LAST:event_profitFromPropertyChange

    private void profitFromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profitFromFocusLost

    }//GEN-LAST:event_profitFromFocusLost

    private void profitToKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_profitToKeyReleased

    }//GEN-LAST:event_profitToKeyReleased

    private void profitToPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_profitToPropertyChange

    }//GEN-LAST:event_profitToPropertyChange

    private void profitToFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profitToFocusLost

    }//GEN-LAST:event_profitToFocusLost

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        generateProfitOfYear();

        profitFrom.setCalendar(null);
        profitTo.setCalendar(null);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        gererateProfitOfToday();

        profitFrom.setCalendar(null);
        profitTo.setCalendar(null);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        generateProfitOfMonth();

        profitFrom.setCalendar(null);
        profitTo.setCalendar(null);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void itemfromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemfromFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_itemfromFocusLost

    private void itemfromPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_itemfromPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_itemfromPropertyChange

    private void itemfromKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemfromKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_itemfromKeyReleased

    private void itemtoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemtoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_itemtoFocusLost

    private void itemtoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_itemtoPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_itemtoPropertyChange

    private void itemtoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemtoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_itemtoKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        generateMostSellingFromTo(sdf.format(itemfrom.getDate()), sdf.format(itemto.getDate()));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        generateMostSellingOfWeek();
        itemfrom.setCalendar(null);
        itemto.setCalendar(null);
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        generateMostSellingOfMonth();
        itemfrom.setCalendar(null);
        itemto.setCalendar(null);
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        generateMostSellingOfYear();
        itemfrom.setCalendar(null);
        itemto.setCalendar(null);
    }//GEN-LAST:event_jRadioButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel incomeLabel;
    private com.toedter.calendar.JDateChooser itemfrom;
    private com.toedter.calendar.JDateChooser itemto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mostSellPanel;
    private javax.swing.JLabel outcomeLabel;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private com.toedter.calendar.JDateChooser profitFrom;
    private javax.swing.JLabel profitLabel;
    private javax.swing.JPanel profitPanel;
    private com.toedter.calendar.JDateChooser profitTo;
    // End of variables declaration//GEN-END:variables

    private void gererateProfitOfToday() {
        try {

            String[] sd = new SimpleDateFormat("YYYY-MM-dd").format(new Date()).split("-");
            String mn = sd[1];
            String dy = sd[2];
            String yr = sd[0];

//            ResultSet rs_invgrn = ProfitManagment.getAllGrnInvoiceOfToday(yr, mn, dy);
            DefaultCategoryDataset dtd = new DefaultCategoryDataset();
            double in = 0.0;
            double out = 0.0;

//            while (rs_invgrn.next()) {
//                ResultSet rs_inv = ProfitManagment.getAllInvoiceOfToday(yr, mn, dy);
//
//                ResultSet rs_grn = ProfitManagment.getAllGrnOfToday(yr, mn, dy);
//
//                while (rs_inv.next()) {
//                    dtd.setValue(new Double(rs_inv.getString("net_total")),"Amount", "Income");
//                }
//                while (rs_grn.next()) {
//                    dtd.setValue(new Double(rs_grn.getString("net_total")),"Amount", "Expense");
//                }
//
//       
//            }
            ResultSet rs_inv = ProfitManagment.getAllInvoiceOfToday(yr, mn, dy);

            ResultSet rs_grn = ProfitManagment.getAllGrnOfToday(yr, mn, dy);

            while (rs_inv.next()) {
                in = in + Double.parseDouble(rs_inv.getString("net_total"));
            }
            while (rs_grn.next()) {
                out = out + Double.parseDouble(rs_grn.getString("net_total"));
            }
            dtd.setValue(in, "Amount", "Income");

            dtd.setValue(out, "Amount", "Expense");

            System.out.println("Day" + in);
            System.out.println("Day" + in);
            incomeLabel.setText("රු. " + String.valueOf(in));
            outcomeLabel.setText("රු. " + String.valueOf(out));
            profitLabel.setText("රු. " + String.valueOf(in - out));

            JFreeChart barChat = ChartFactory.createBarChart3D("Income/Expense", "Category", "Amount", dtd, PlotOrientation.VERTICAL, true, true, false);

            barChat.getTitle().setPaint(Color.BLUE);
            CategoryPlot categoryPlot = barChat.getCategoryPlot();
            categoryPlot.setRangeGridlinePaint(Color.BLUE);

            ChartPanel pan = new ChartPanel(barChat);
            profitPanel.removeAll();
            profitPanel.add(pan, BorderLayout.CENTER);
            profitPanel.validate();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generateProfitOfMonth() {
        try {

            String[] sd = new SimpleDateFormat("YYYY-MM-dd").format(new Date()).split("-");
            String yr = sd[0];
            String mn = sd[1];

            DefaultCategoryDataset dtd = new DefaultCategoryDataset();
            double in = 0.0;
            double out = 0.0;

            ResultSet rs_inv = ProfitManagment.getAllInvoiceOfMonth(yr, mn);

            ResultSet rs_grn = ProfitManagment.getAllGrnOfMonth(yr, mn);

            while (rs_inv.next()) {
                in = in + Double.parseDouble(rs_inv.getString("net_total"));
            }
            while (rs_grn.next()) {
                out = out + Double.parseDouble(rs_grn.getString("net_total"));
            }
            dtd.setValue(in, "Amount", "Income");

            dtd.setValue(out, "Amount", "Expense");

            System.out.println("Month" + in);
            System.out.println("Month" + out);
            incomeLabel.setText("රු. " + String.valueOf(in));
            outcomeLabel.setText("රු. " + String.valueOf(out));
            profitLabel.setText("රු. " + String.valueOf(in - out));

            JFreeChart barChat = ChartFactory.createBarChart3D("Income/Expense", "Category", "Amount", dtd, PlotOrientation.VERTICAL, true, true, false);

            barChat.getTitle().setPaint(Color.BLUE);
            CategoryPlot categoryPlot = barChat.getCategoryPlot();
            categoryPlot.setRangeGridlinePaint(Color.BLUE);

            ChartPanel pan = new ChartPanel(barChat);
            profitPanel.removeAll();
            profitPanel.add(pan, BorderLayout.CENTER);
            profitPanel.validate();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generateProfitOfYear() {
        try {

            String[] sd = new SimpleDateFormat("YYYY-MM-dd").format(new Date()).split("-");
            String yr = sd[0];

            DefaultCategoryDataset dtd = new DefaultCategoryDataset();
            double in = 0.0;
            double out = 0.0;

            ResultSet rs_inv = ProfitManagment.getAllInvoiceOfYear(yr);

            ResultSet rs_grn = ProfitManagment.getAllGrnOfYear(yr);

            while (rs_inv.next()) {
                in = in + Double.parseDouble(rs_inv.getString("net_total"));
            }
            while (rs_grn.next()) {
                out = out + Double.parseDouble(rs_grn.getString("net_total"));
            }
            dtd.setValue(in, "Amount", "Income");

            dtd.setValue(out, "Amount", "Expense");

            System.out.println("Year" + in);
            System.out.println("Year" + out);
            incomeLabel.setText("රු. " + String.valueOf(in));
            outcomeLabel.setText("රු. " + String.valueOf(out));
            profitLabel.setText("රු. " + String.valueOf(in - out));

            JFreeChart barChat = ChartFactory.createBarChart3D("Income/Expense", "Category", "Amount", dtd, PlotOrientation.VERTICAL, true, true, false);

            barChat.getTitle().setPaint(Color.BLUE);
            CategoryPlot categoryPlot = barChat.getCategoryPlot();
            categoryPlot.setRangeGridlinePaint(Color.BLUE);

            ChartPanel pan = new ChartPanel(barChat);
            profitPanel.removeAll();
            profitPanel.add(pan, BorderLayout.CENTER);
            profitPanel.validate();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generateProfitFromTo(String from, String to) {
        try {

            DefaultCategoryDataset dtd = new DefaultCategoryDataset();
            double in = 0.0;
            double out = 0.0;

            ResultSet rs_inv = ProfitManagment.getAllInvoiceFromTo(from, to);

            ResultSet rs_grn = ProfitManagment.getAllGrnFromTo(from, to);

            while (rs_inv.next()) {
                in = in + Double.parseDouble(rs_inv.getString("net_total"));
            }
            while (rs_grn.next()) {
                out = out + Double.parseDouble(rs_grn.getString("net_total"));
            }
            dtd.setValue(in, "Amount", "Income");

            dtd.setValue(out, "Amount", "Expense");

            System.out.println("Year" + in);
            System.out.println("Year" + out);
            incomeLabel.setText("රු. " + String.valueOf(in));
            outcomeLabel.setText("රු. " + String.valueOf(out));
            profitLabel.setText("රු. " + String.valueOf(in - out));

            JFreeChart barChat = ChartFactory.createBarChart3D("Income/Expense", "Category", "Amount", dtd, PlotOrientation.VERTICAL, true, true, false);

            barChat.getTitle().setPaint(Color.BLUE);
            CategoryPlot categoryPlot = barChat.getCategoryPlot();
            categoryPlot.setRangeGridlinePaint(Color.BLUE);

            ChartPanel pan = new ChartPanel(barChat);
            profitPanel.removeAll();
            profitPanel.add(pan, BorderLayout.CENTER);
            profitPanel.validate();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generateMostSellingOfWeek() {
        LocalDate date = LocalDate.now();
        WeekFields weekFields = WeekFields.of(Locale.getDefault());
        int week = date.get(weekFields.weekOfWeekBasedYear());

        String[] sd = new SimpleDateFormat("YYYY-MM-dd").format(new Date()).split("-");
        String yr = sd[0];

        try {
            ResultSet result = MostSellItemManagment.getMostSellingOfWeek(yr, week);

            DefaultPieDataset dtd = new DefaultPieDataset();

            while (result.next()) {
                dtd.setValue(result.getString("productName"), new Double(result.getString("qty")));
            }

            JFreeChart chart = ChartFactory.createPieChart3D("Most Selled Product", dtd, true, true, false);

            PiePlot3D plot = (PiePlot3D) chart.getPlot();
            plot.setForegroundAlpha(0.9f);
            DecimalFormat decimalformat = new DecimalFormat("##.##");
            PieSectionLabelGenerator generator = new StandardPieSectionLabelGenerator("{0} : {1} ({2})", decimalformat, new DecimalFormat("0.00%"));
            plot.setLabelGenerator(generator);

            ChartPanel pan = new ChartPanel(chart);
            chart.setBackgroundPaint(Color.getHSBColor(165, 100, 80));
            mostSellPanel.removeAll();
            mostSellPanel.add(pan, BorderLayout.CENTER);
            mostSellPanel.validate();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generateMostSellingOfMonth() {

        String[] sd = new SimpleDateFormat("YYYY-MM-dd").format(new Date()).split("-");
        String yr = sd[0];
        String mn = sd[1];

        try {
            ResultSet result = MostSellItemManagment.getMostSellingOfMonth(yr, mn);

            DefaultPieDataset dtd = new DefaultPieDataset();

            while (result.next()) {
                dtd.setValue(result.getString("productName"), new Double(result.getString("qty")));
            }

            JFreeChart chart = ChartFactory.createPieChart3D("Most Selled Product", dtd, true, true, false);

            PiePlot3D plot = (PiePlot3D) chart.getPlot();
            plot.setForegroundAlpha(0.9f);
            DecimalFormat decimalformat = new DecimalFormat("##.##");
            PieSectionLabelGenerator generator = new StandardPieSectionLabelGenerator("{0} : {1} ({2})", decimalformat, new DecimalFormat("0.00%"));
            plot.setLabelGenerator(generator);

            ChartPanel pan = new ChartPanel(chart);
            chart.setBackgroundPaint(Color.getHSBColor(165, 100, 80));
            mostSellPanel.removeAll();
            mostSellPanel.add(pan, BorderLayout.CENTER);
            mostSellPanel.validate();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generateMostSellingOfYear() {

        String[] sd = new SimpleDateFormat("YYYY-MM-dd").format(new Date()).split("-");
        String yr = sd[0];

        try {
            ResultSet result = MostSellItemManagment.getMostSellingOfYear(yr);

            DefaultPieDataset dtd = new DefaultPieDataset();

            while (result.next()) {
                dtd.setValue(result.getString("productName"), new Double(result.getString("qty")));
            }

            JFreeChart chart = ChartFactory.createPieChart3D("Most Selled Product", dtd, true, true, false);

            PiePlot3D plot = (PiePlot3D) chart.getPlot();
            plot.setForegroundAlpha(0.9f);
            DecimalFormat decimalformat = new DecimalFormat("##.##");
            PieSectionLabelGenerator generator = new StandardPieSectionLabelGenerator("{0} : {1} ({2})", decimalformat, new DecimalFormat("0.00%"));
            plot.setLabelGenerator(generator);

            ChartPanel pan = new ChartPanel(chart);
            chart.setBackgroundPaint(Color.getHSBColor(165, 100, 80));
            mostSellPanel.removeAll();
            mostSellPanel.add(pan, BorderLayout.CENTER);
            mostSellPanel.validate();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generateMostSellingFromTo(String from, String to) {

        try {
            ResultSet result = MostSellItemManagment.getMostSellingFromTo(from, to);

            DefaultPieDataset dtd = new DefaultPieDataset();

            while (result.next()) {
                System.out.println(result.getString("productName"));
                dtd.setValue(result.getString("productName"), new Double(result.getString("qty")));
            }

            JFreeChart chart = ChartFactory.createPieChart3D("Most Selled Product", dtd, true, true, false);

            PiePlot3D plot = (PiePlot3D) chart.getPlot();
            plot.setForegroundAlpha(0.9f);
            DecimalFormat decimalformat = new DecimalFormat("##.##");
            PieSectionLabelGenerator generator = new StandardPieSectionLabelGenerator("{0} : {1} ({2})", decimalformat, new DecimalFormat("0.00%"));
            plot.setLabelGenerator(generator);

            ChartPanel pan = new ChartPanel(chart);
            chart.setBackgroundPaint(Color.getHSBColor(165, 100, 80));
            mostSellPanel.removeAll();
            mostSellPanel.add(pan, BorderLayout.CENTER);
            mostSellPanel.validate();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
