/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Databases.Beans.User;
import Databases.DB;
import com.alee.laf.WebLookAndFeel;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JFrame;
import Databases.Table.UserManager;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author nipun
 */
public class Main extends javax.swing.JFrame {

    private static final String USERNAMECHARACTERERROR
            = "<html><p><font color=\"#000\" "
            + "size=\"4\" face=\"Nirmala UI\">ගිණුම් නමේ අක්ෂර ගණන 3 - 10 අතර වියයුතුයි!"
            + "</font></p></html>";

    private static final String USERNAMEUSEDERROR
            = "<html><p><font color=\"#000\" "
            + "size=\"4\" face=\"Nirmala UI\">මෙම ගිණුම් නම දැනටමත් භාවිතා කර ඇත!"
            + "</font></p></html>";

    private static final String PASSWORDNOTMATCHERROR
            = "<html><p><font color=\"#000\" "
            + "size=\"4\" face=\"Nirmala UI\">මුරපදය නොගැලපේ!"
            + "</font></p></html>";

    private static final String PASSWORDCHARACTERERROR
            = "<html><p><font color=\"#000\" "
            + "size=\"4\" face=\"Nirmala UI\">මුර පදයේ අක්ෂර ගණන 5ට වැඩි වියයුතුයි!"
            + "</font></p></html>";

    private static final String REQUIREDALLDETAILSERROR
            = "<html><p><font color=\"#000\" "
            + "size=\"4\" face=\"Nirmala UI\">කරුණාකර සියලු විස්තර ලබා දෙන්න!"
            + "</font></p></html>";

    private static final String TRYAGAINERROR
            = "<html><p><font color=\"#000\" "
            + "size=\"4\" face=\"Nirmala UI\">ක්‍රියාවලිය සම්පූර්ණ නැත. නැවත උත්සාහ කරන්න."
            + "</font></p></html>";

    private static final String CREATENEWACCOUNTMSG
            = "<html><p><font color=\"#000\" "
            + "size=\"4\" face=\"Nirmala UI\">නව ගිණුමක් සෑදුනා."
            + "</font></p></html>";

    private static final String WRONGPASSWORDERROR
            = "<html><p><font color=\"#000\" "
            + "size=\"4\" face=\"Nirmala UI\">මුර පදය නැවත පරික්ෂා කරන්න!"
            + "</font></p></html>";

    private static final String PASSWORDRESETMSG
            = "<html><p><font color=\"#000\" "
            + "size=\"4\" face=\"Nirmala UI\">මුරපදය සාර්ථකව වෙනස් විය."
            + "</font></p></html>";

    private static final String BACKUPSUCCESSMSG
            = "<html><p><font color=\"#000\" "
            + "size=\"4\" face=\"Nirmala UI\">සාර්ථකව ස්ථාපනය කරන ලදී"
            + "</font></p></html>";

    private static final String RESTORESUCCESSMSG
            = "<html><p><font color=\"#000\" "
            + "size=\"4\" face=\"Nirmala UI\">සාර්ථකව නැවත ලබාගන්නා ලදී"
            + "</font></p></html>";

    private boolean ok = false;

    public static String userId;

    /**
     * Creates new form Home
     */
    public Main() {
        initComponents();

        Dimension dimMax = Toolkit.getDefaultToolkit().getScreenSize();
        dimMax.setSize(dimMax.width, dimMax.height);
        this.setMaximumSize(dimMax);
        generateDateTime();
        loadButtonColor();
        loadQuestions();

        clickHomeBtn();
    }

    Main(String uid) {
        initComponents();

        Dimension dimMax = Toolkit.getDefaultToolkit().getScreenSize();
        dimMax.setSize(dimMax.width, dimMax.height);
        this.setMaximumSize(dimMax);

        userId = uid;

        usernameTitle.setText(UserManager.getUsernameFromUid(uid));
        generateDateTime();
        loadButtonColor();
        loadQuestions();

        clickHomeBtn();

        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                logout();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainButtonGroup = new javax.swing.ButtonGroup();
        settingsDialog = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        accountSettings = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        oldPassword = new javax.swing.JPasswordField();
        newPassword = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        newConfirmPassword = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        createNewAccount = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        question1 = new javax.swing.JComboBox<>();
        confirmPassword = new javax.swing.JPasswordField();
        question2 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        question3 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        answer3 = new javax.swing.JTextField();
        answer1 = new javax.swing.JTextField();
        answer2 = new javax.swing.JTextField();
        backup = new javax.swing.JPanel();
        restorePath = new javax.swing.JTextField();
        backupPath = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        webProgressBar1 = new com.alee.laf.progressbar.WebProgressBar();
        mainPanel = new javax.swing.JPanel();
        slide_panel = new javax.swing.JPanel();
        settingsToggle = new javax.swing.JToggleButton();
        homeToggle = new javax.swing.JToggleButton();
        invoiceToggle = new javax.swing.JToggleButton();
        stockToggle = new javax.swing.JToggleButton();
        supplierToggle = new javax.swing.JToggleButton();
        reportsToggle = new javax.swing.JToggleButton();
        center_panel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        usernameTitle = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        date_time = new javax.swing.JLabel();

        settingsDialog.setBackground(new java.awt.Color(234, 249, 244));

        jTabbedPane1.setBackground(new java.awt.Color(229, 234, 237));
        jTabbedPane1.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N

        accountSettings.setBackground(new java.awt.Color(234, 249, 244));
        accountSettings.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(229, 234, 237));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "මුර පදය වෙනස් කිරීම", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Nirmala UI", 0, 12))); // NOI18N
        jPanel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jButton2.setText("වෙනස් කරන්න");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 150, 40));

        jLabel4.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jLabel4.setText("පරණ මුර පදය");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, -1));

        oldPassword.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        oldPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                oldPasswordKeyTyped(evt);
            }
        });
        jPanel3.add(oldPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 260, 30));

        newPassword.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        newPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                newPasswordFocusLost(evt);
            }
        });
        newPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                newPasswordKeyTyped(evt);
            }
        });
        jPanel3.add(newPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 260, 30));

        jLabel5.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jLabel5.setText("අලුත් මුර පදය");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        newConfirmPassword.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        newConfirmPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newConfirmPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newConfirmPasswordFocusLost(evt);
            }
        });
        newConfirmPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                newConfirmPasswordKeyTyped(evt);
            }
        });
        jPanel3.add(newConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 260, 30));

        jLabel10.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        jLabel10.setText("නැවත අලුත් මුර පදය");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, -1, -1));

        accountSettings.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 450, 340));

        jTabbedPane1.addTab(" ගිණුම් සැකසුම්", accountSettings);

        createNewAccount.setBackground(new java.awt.Color(234, 249, 244));
        createNewAccount.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        jLabel2.setText("පළමු ප්‍රශ්නය සහ පිළිතුර");
        createNewAccount.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, -1, -1));

        username.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameFocusLost(evt);
            }
        });
        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usernameKeyTyped(evt);
            }
        });
        createNewAccount.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 340, 30));

        jLabel3.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        jLabel3.setText("ගිණුමේ නම");
        createNewAccount.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        password.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordFocusLost(evt);
            }
        });
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordKeyTyped(evt);
            }
        });
        createNewAccount.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 340, 30));

        jLabel6.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        jLabel6.setText("මුර පදය");
        createNewAccount.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        jLabel7.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        jLabel7.setText("මුර පදය තහවරු කරන්න");
        createNewAccount.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, -1));

        question1.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        createNewAccount.add(question1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, 340, 30));

        confirmPassword.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        confirmPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                confirmPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                confirmPasswordFocusLost(evt);
            }
        });
        confirmPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                confirmPasswordKeyTyped(evt);
            }
        });
        createNewAccount.add(confirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 340, 30));

        question2.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        createNewAccount.add(question2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 340, 30));

        jLabel8.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        jLabel8.setText("දෙවන ප්‍රශ්නය සහ පිළිතුර");
        createNewAccount.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, -1, -1));

        jLabel9.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        jLabel9.setText("තෙවන ප්‍රශ්නය සහ පිළිතුර");
        createNewAccount.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 500, -1, -1));

        question3.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        createNewAccount.add(question3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 520, 340, 30));

        jButton3.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jButton3.setText("සකසන්න");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        createNewAccount.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 610, 110, 30));

        answer3.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        answer3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                answer3KeyTyped(evt);
            }
        });
        createNewAccount.add(answer3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 560, 340, 30));

        answer1.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        answer1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                answer1KeyTyped(evt);
            }
        });
        createNewAccount.add(answer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, 340, 30));

        answer2.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        answer2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                answer2KeyTyped(evt);
            }
        });
        createNewAccount.add(answer2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 440, 340, 30));

        jTabbedPane1.addTab(" නව ගිණුමක් සාදන්න", createNewAccount);

        backup.setBackground(new java.awt.Color(234, 249, 244));
        backup.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        restorePath.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        backup.add(restorePath, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 310, 30));

        backupPath.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        backup.add(backupPath, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 310, 30));

        jButton1.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jButton1.setText(" තෝරන්න");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        backup.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 200, -1, 30));

        jButton4.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jButton4.setText("නැවත ලබාගන්න");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        backup.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 180, 30));

        jButton5.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jButton5.setText(" තෝරන්න");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        backup.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, -1, 30));

        jButton6.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jButton6.setText("ස්ථාපනය කරන්න ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        backup.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 180, 30));

        webProgressBar1.setProgressBottomColor(new java.awt.Color(0, 153, 51));
        backup.add(webProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 400, 30));

        jTabbedPane1.addTab("දත්ත ප්‍රතිස්ථාපනය", backup);

        javax.swing.GroupLayout settingsDialogLayout = new javax.swing.GroupLayout(settingsDialog.getContentPane());
        settingsDialog.getContentPane().setLayout(settingsDialogLayout);
        settingsDialogLayout.setHorizontalGroup(
            settingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        settingsDialogLayout.setVerticalGroup(
            settingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("account settings");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 728));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setMinimumSize(new java.awt.Dimension(1366, 728));
        mainPanel.setPreferredSize(new java.awt.Dimension(1366, 728));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        slide_panel.setBackground(new java.awt.Color(79, 195, 109));
        slide_panel.setMinimumSize(new java.awt.Dimension(110, 708));
        slide_panel.setPreferredSize(new java.awt.Dimension(110, 708));
        slide_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        settingsToggle.setBackground(new java.awt.Color(225, 226, 228));
        mainButtonGroup.add(settingsToggle);
        settingsToggle.setFont(new java.awt.Font("Nirmala UI", 1, 16)); // NOI18N
        settingsToggle.setText(" සැකසුම්");
        settingsToggle.setBorder(null);
        settingsToggle.setBorderPainted(false);
        settingsToggle.setContentAreaFilled(false);
        settingsToggle.setFocusPainted(false);
        settingsToggle.setOpaque(true);
        settingsToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsToggleActionPerformed(evt);
            }
        });
        slide_panel.add(settingsToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 150, 60));

        homeToggle.setBackground(new java.awt.Color(225, 226, 228));
        mainButtonGroup.add(homeToggle);
        homeToggle.setFont(new java.awt.Font("Nirmala UI", 1, 16)); // NOI18N
        homeToggle.setText("මුල් පිටුව");
        homeToggle.setBorder(null);
        homeToggle.setBorderPainted(false);
        homeToggle.setContentAreaFilled(false);
        homeToggle.setFocusPainted(false);
        homeToggle.setOpaque(true);
        homeToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeToggleActionPerformed(evt);
            }
        });
        slide_panel.add(homeToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 60));

        invoiceToggle.setBackground(new java.awt.Color(225, 226, 228));
        mainButtonGroup.add(invoiceToggle);
        invoiceToggle.setFont(new java.awt.Font("Nirmala UI", 1, 16)); // NOI18N
        invoiceToggle.setText(" ඉන්වොයිසිය");
        invoiceToggle.setBorder(null);
        invoiceToggle.setBorderPainted(false);
        invoiceToggle.setContentAreaFilled(false);
        invoiceToggle.setFocusPainted(false);
        invoiceToggle.setFocusable(false);
        invoiceToggle.setOpaque(true);
        invoiceToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceToggleActionPerformed(evt);
            }
        });
        slide_panel.add(invoiceToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 150, 60));

        stockToggle.setBackground(new java.awt.Color(225, 226, 228));
        mainButtonGroup.add(stockToggle);
        stockToggle.setFont(new java.awt.Font("Nirmala UI", 1, 16)); // NOI18N
        stockToggle.setText("ගබඩාව");
        stockToggle.setBorder(null);
        stockToggle.setBorderPainted(false);
        stockToggle.setContentAreaFilled(false);
        stockToggle.setFocusPainted(false);
        stockToggle.setOpaque(true);
        stockToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockToggleActionPerformed(evt);
            }
        });
        slide_panel.add(stockToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 150, 60));

        supplierToggle.setBackground(new java.awt.Color(225, 226, 228));
        mainButtonGroup.add(supplierToggle);
        supplierToggle.setFont(new java.awt.Font("Nirmala UI", 1, 16)); // NOI18N
        supplierToggle.setText("සැපයුම්කරුවන්");
        supplierToggle.setBorder(null);
        supplierToggle.setBorderPainted(false);
        supplierToggle.setContentAreaFilled(false);
        supplierToggle.setFocusPainted(false);
        supplierToggle.setOpaque(true);
        supplierToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierToggleActionPerformed(evt);
            }
        });
        slide_panel.add(supplierToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 150, 60));

        reportsToggle.setBackground(new java.awt.Color(225, 226, 228));
        mainButtonGroup.add(reportsToggle);
        reportsToggle.setFont(new java.awt.Font("Nirmala UI", 1, 16)); // NOI18N
        reportsToggle.setText(" වාර්තා");
        reportsToggle.setBorder(null);
        reportsToggle.setBorderPainted(false);
        reportsToggle.setContentAreaFilled(false);
        reportsToggle.setFocusPainted(false);
        reportsToggle.setOpaque(true);
        reportsToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsToggleActionPerformed(evt);
            }
        });
        slide_panel.add(reportsToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 150, 60));

        mainPanel.add(slide_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 150, 708));

        center_panel.setBackground(new java.awt.Color(234, 249, 244));
        center_panel.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        center_panel.setMinimumSize(new java.awt.Dimension(1256, 708));
        center_panel.setPreferredSize(new java.awt.Dimension(1256, 708));
        mainPanel.add(center_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 1216, 708));

        jPanel1.setBackground(new java.awt.Color(60, 72, 86));
        jPanel1.setMinimumSize(new java.awt.Dimension(1366, 20));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("X");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1347, 0, -1, -1));

        usernameTitle.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        usernameTitle.setForeground(new java.awt.Color(255, 255, 255));
        usernameTitle.setText("Username");
        jPanel1.add(usernameTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 0, 190, 20));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/logout.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 0, -1, 20));

        date_time.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        date_time.setForeground(new java.awt.Color(255, 255, 255));
        date_time.setText("Time");
        jPanel1.add(date_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 0, 170, 20));

        mainPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 20));

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 728));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void homeToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeToggleActionPerformed
        loadButtonColor();
        homeToggle.setBackground(Color.decode("#eaf9f4"));
        Home panel = Home.getInstance();
        center_panel.removeAll();
        center_panel.add(panel);
        center_panel.repaint();
        center_panel.revalidate();
        center_panel.setVisible(true);

    }//GEN-LAST:event_homeToggleActionPerformed

    private void invoiceToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceToggleActionPerformed
        loadButtonColor();
        invoiceToggle.setBackground(Color.decode("#eaf9f4"));
        Invoice panel = Invoice.getInstance();
        center_panel.removeAll();
        center_panel.add(panel);
        center_panel.repaint();
        center_panel.revalidate();
        center_panel.setVisible(true);
    }//GEN-LAST:event_invoiceToggleActionPerformed

    private void stockToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockToggleActionPerformed
        loadButtonColor();
        stockToggle.setBackground(Color.decode("#eaf9f4"));
        Stock panel = Stock.getInstance();
        center_panel.removeAll();
        center_panel.add(panel);
        center_panel.repaint();
        center_panel.revalidate();
        center_panel.setVisible(true);
    }//GEN-LAST:event_stockToggleActionPerformed

    private void supplierToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierToggleActionPerformed
        loadButtonColor();
        supplierToggle.setBackground(Color.decode("#eaf9f4"));
        Supplier panel = Supplier.getInstance();
        center_panel.removeAll();
        center_panel.add(panel);
        center_panel.repaint();
        center_panel.revalidate();
        center_panel.setVisible(true);
    }//GEN-LAST:event_supplierToggleActionPerformed

    private void reportsToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsToggleActionPerformed
        loadButtonColor();
        reportsToggle.setBackground(Color.decode("#eaf9f4"));
        Reports panel = Reports.getInstance();
        center_panel.removeAll();
        center_panel.add(panel);
        center_panel.repaint();
        center_panel.revalidate();
        center_panel.setVisible(true);
    }//GEN-LAST:event_reportsToggleActionPerformed

    private void settingsToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsToggleActionPerformed
        loadButtonColor();
        settingsToggle.setBackground(Color.decode("#eaf9f4"));
        settingsDialog.pack();
        settingsDialog.setLocationRelativeTo(null);
        settingsDialog.setVisible(true);

    }//GEN-LAST:event_settingsToggleActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (ok) {
            if (!username.getText().isEmpty() && !String.valueOf(password.getPassword()).isEmpty() && !String.valueOf(confirmPassword.getPassword()).isEmpty() && !String.valueOf(confirmPassword.getPassword()).isEmpty() && !answer1.getText().isEmpty() && !answer2.getText().isEmpty() && !answer3.getText().isEmpty()) {
                String pass1 = String.valueOf(password.getPassword());
                String pass2 = String.valueOf(confirmPassword.getPassword());
                if (pass1.equals(pass2)) {

                    try {
                        String encripedPass = Encription.Encript.encript(pass1);

                        ArrayList<String> questionsList = new ArrayList<String>();
                        ArrayList<String> answersList = new ArrayList<String>();

                        questionsList.add(question1.getSelectedItem().toString().trim());
                        questionsList.add(question2.getSelectedItem().toString().trim());
                        questionsList.add(question3.getSelectedItem().toString().trim());

                        answersList.add(answer1.getText().trim());
                        answersList.add(answer2.getText().trim());
                        answersList.add(answer3.getText().trim());

                        User user = new User().setUserName(username.getText().trim()).setPassword(encripedPass).setQuestions(questionsList).setAnswers(answersList);

                        if (UserManager.addUser(user)) {
                            JOptionPane.showMessageDialog(settingsDialog, CREATENEWACCOUNTMSG);
                            clearTextFields();
                        } else {
                            JOptionPane.showMessageDialog(settingsDialog, TRYAGAINERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                        }

                    } catch (Exception ex) {
                        DB.processException(ex);
                    }

                } else {
                    JOptionPane.showMessageDialog(settingsDialog, PASSWORDNOTMATCHERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                    password.setText(null);
                    confirmPassword.setText(null);
                    password.grabFocus();
                }
            } else {
                JOptionPane.showMessageDialog(settingsDialog, REQUIREDALLDETAILSERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void confirmPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPasswordFocusLost
        String pass1 = String.valueOf(password.getPassword());
        String pass2 = String.valueOf(confirmPassword.getPassword());

        if (!pass2.isEmpty()) {

            if (!pass1.equals(pass2)) {
                JOptionPane.showMessageDialog(settingsDialog, PASSWORDNOTMATCHERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                password.setText(null);
                confirmPassword.setText(null);
                password.grabFocus();
            }

        }

    }//GEN-LAST:event_confirmPasswordFocusLost

    private void passwordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusLost
        String pass1 = String.valueOf(password.getPassword());
        if (!pass1.isEmpty()) {
            if (pass1.length() <= 5) {
                JOptionPane.showMessageDialog(settingsDialog, PASSWORDCHARACTERERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                password.grabFocus();
            }
        }
    }//GEN-LAST:event_passwordFocusLost

    private void usernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusLost
        String name = username.getText();
        if (!name.isEmpty()) {
            if (name.length() < 3 || name.length() > 10) {
                ok = false;
                JOptionPane.showMessageDialog(settingsDialog, USERNAMECHARACTERERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                username.grabFocus();
            } else {

                if (UserManager.isUserNameExits(name)) {
                    ok = false;
                    JOptionPane.showMessageDialog(settingsDialog, USERNAMEUSEDERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                    username.selectAll();
                    username.grabFocus();
                } else {
                    ok = true;
                }

            }

        }
    }//GEN-LAST:event_usernameFocusLost

    private void confirmPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPasswordFocusGained
        String pass1 = String.valueOf(password.getPassword());
        if (pass1.isEmpty()) {
            password.grabFocus();
        }
    }//GEN-LAST:event_confirmPasswordFocusGained

    private void usernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyTyped
        if (username.getText().isEmpty()) {
            if (Character.isDigit(evt.getKeyChar())) {
                evt.consume();
            }
        }

        if (Character.isWhitespace(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_usernameKeyTyped

    private void answer1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_answer1KeyTyped

        if (Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }

    }//GEN-LAST:event_answer1KeyTyped

    private void answer2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_answer2KeyTyped
        if (Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_answer2KeyTyped

    private void answer3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_answer3KeyTyped
        if (Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_answer3KeyTyped

    private void passwordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyTyped
        if (Character.isWhitespace(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_passwordKeyTyped

    private void confirmPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmPasswordKeyTyped
        if (Character.isWhitespace(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_confirmPasswordKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if (!String.valueOf(oldPassword.getPassword()).isEmpty() && !String.valueOf(newPassword.getPassword()).isEmpty() && !String.valueOf(newConfirmPassword.getPassword()).isEmpty()) {

            String pass1 = String.valueOf(newPassword.getPassword());
            String pass2 = String.valueOf(newConfirmPassword.getPassword());
            if (pass1.equals(pass2)) {
                try {
                    String realPass = UserManager.getPasswordFromUid(userId);
                    String oldPass = Encription.Encript.encript(String.valueOf(oldPassword.getPassword()));
                    if (realPass.equals(oldPass)) {

                        String encripedPass = Encription.Encript.encript(pass1);
                        if (UserManager.resetPasswordFromUid(encripedPass, userId)) {
                            JOptionPane.showMessageDialog(settingsDialog, PASSWORDRESETMSG);
                            oldPassword.setText(null);
                            newPassword.setText(null);
                            newConfirmPassword.setText(null);
                            oldPassword.grabFocus();
                        }

                    } else {
                        JOptionPane.showMessageDialog(settingsDialog, WRONGPASSWORDERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                        oldPassword.setText(null);
                        newPassword.setText(null);
                        newConfirmPassword.setText(null);
                        oldPassword.grabFocus();
                    }

                } catch (Exception ex) {
                    DB.processException(ex);
                }

            } else {
                JOptionPane.showMessageDialog(settingsDialog, PASSWORDNOTMATCHERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                newPassword.setText(null);
                newConfirmPassword.setText(null);
                newPassword.grabFocus();
            }
        } else {
            JOptionPane.showMessageDialog(settingsDialog, REQUIREDALLDETAILSERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void newPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPasswordKeyTyped
        if (Character.isWhitespace(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_newPasswordKeyTyped

    private void newConfirmPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newConfirmPasswordKeyTyped
        if (Character.isWhitespace(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_newConfirmPasswordKeyTyped

    private void oldPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oldPasswordKeyTyped
        if (Character.isWhitespace(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_oldPasswordKeyTyped

    private void newPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newPasswordFocusLost
        String pass1 = String.valueOf(newPassword.getPassword());
        if (!pass1.isEmpty()) {
            if (pass1.length() <= 5) {
                JOptionPane.showMessageDialog(settingsDialog, PASSWORDCHARACTERERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                newPassword.grabFocus();
            }
        }
    }//GEN-LAST:event_newPasswordFocusLost

    private void newConfirmPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newConfirmPasswordFocusGained
        String pass1 = String.valueOf(newPassword.getPassword());
        if (pass1.isEmpty()) {
            newPassword.grabFocus();
        }
    }//GEN-LAST:event_newConfirmPasswordFocusGained

    private void newConfirmPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newConfirmPasswordFocusLost
        String pass1 = String.valueOf(newPassword.getPassword());
        String pass2 = String.valueOf(newConfirmPassword.getPassword());

        if (!pass2.isEmpty()) {

            if (!pass1.equals(pass2)) {
                JOptionPane.showMessageDialog(settingsDialog, PASSWORDNOTMATCHERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                newPassword.setText(null);
                newConfirmPassword.setText(null);
                newPassword.grabFocus();
            }

        }
    }//GEN-LAST:event_newConfirmPasswordFocusLost

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        logout();
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            JFileChooser fc = new JFileChooser(new File("D:/"));
            int i = fc.showOpenDialog(settingsDialog);
            if (i == JFileChooser.APPROVE_OPTION) {
                File selected = fc.getSelectedFile();
                String path = selected.getAbsolutePath().replace("\\", "/") + ".sql";
                backupPath.setText(path);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            JFileChooser fc = new JFileChooser(new File("D:/"));
            int i = fc.showOpenDialog(settingsDialog);
            if (i == JFileChooser.APPROVE_OPTION) {
                File selected = fc.getSelectedFile();
                String path = selected.getAbsolutePath().replace("\\", "/") + ".sql";
                restorePath.setText(path);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        webProgressBar1.setIndeterminate(true);
        webProgressBar1.setStringPainted(true);

        webProgressBar1.setString("Loading...");
        String path = backupPath.getText();

        String executeCmd = "C:/Program Files/MySQL/MySQL Server 5.7/bin/mysqldump.exe -uroot -p1234 -hlocalhost -P3306 my_retail -r " + path;
        Process runtimeProcess;
        try {

            runtimeProcess = Runtime.getRuntime().exec(executeCmd);
            int processComplete = runtimeProcess.waitFor();

            if (processComplete == 0) {

                Thread t = new Thread() {
                    public void run() {
                        try {
                            Thread.sleep(2000);
                            JOptionPane.showMessageDialog(settingsDialog, BACKUPSUCCESSMSG);
                            webProgressBar1.setIndeterminate(false);
                            webProgressBar1.setStringPainted(false);
                            backupPath.setText(null);
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }

                };
                t.start();
            } else {
                Thread t = new Thread() {
                    public void run() {
                        try {
                            Thread.sleep(2000);
                            JOptionPane.showMessageDialog(settingsDialog, TRYAGAINERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                            webProgressBar1.setIndeterminate(false);
                            webProgressBar1.setStringPainted(false);
                            backupPath.setText(null);
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }

                };
                t.start();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        webProgressBar1.setIndeterminate(true);
        webProgressBar1.setStringPainted(true);

        webProgressBar1.setString("Loading...");
        String dbUserName = "root";
        String dbPassword = "1234";
        String source = restorePath.getText();

        String[] executeCmd = new String[]{"C:/Program Files/MySQL/MySQL Server 5.7/bin/mysql.exe", "--user=" + dbUserName, "--host=localhost", "--port=3306", "--password=" + dbPassword, "-e", source};

        Process runtimeProcess;
        try {
            runtimeProcess = Runtime.getRuntime().exec(executeCmd);
            int processComplete = runtimeProcess.waitFor();

            if (processComplete == 0) {

                Thread t = new Thread() {
                    public void run() {
                        try {
                            Thread.sleep(2000);
                            JOptionPane.showMessageDialog(settingsDialog, TRYAGAINERROR, "වැරදි", JOptionPane.ERROR_MESSAGE);
                            webProgressBar1.setIndeterminate(false);
                            webProgressBar1.setStringPainted(false);
                            restorePath.setText(null);
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }

                };
                t.start();
            } else {
                Thread t = new Thread() {
                    public void run() {
                        try {
                            Thread.sleep(2000);

                            JOptionPane.showMessageDialog(settingsDialog, RESTORESUCCESSMSG);
                            webProgressBar1.setIndeterminate(false);
                            webProgressBar1.setStringPainted(false);
                            restorePath.setText(null);
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }

                };
                t.start();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    private void loadQuestions() {

        ResultSet allQuestions = UserManager.getAllQuestions();

        try {
            while (allQuestions.next()) {

                if (allQuestions.getRow() <= 3) {
                    question1.addItem(allQuestions.getString("recovery_question"));
                } else if (allQuestions.getRow() <= 6) {
                    question2.addItem(allQuestions.getString("recovery_question"));
                } else if (allQuestions.getRow() <= 9) {
                    question3.addItem(allQuestions.getString("recovery_question"));
                }
            }

        } catch (SQLException ex) {
            DB.processException(ex);
        }
    }

    private void clearTextFields() {
        username.setText(null);
        password.setText(null);
        confirmPassword.setText(null);
        answer1.setText(null);
        answer2.setText(null);
        answer3.setText(null);

        question1.setSelectedIndex(0);
        question2.setSelectedIndex(0);
        question3.setSelectedIndex(0);

        username.grabFocus();
    }

    private void loadButtonColor() {
        homeToggle.setBackground(Color.decode("#4FC36D"));
        invoiceToggle.setBackground(Color.decode("#4FC36D"));
        stockToggle.setBackground(Color.decode("#4FC36D"));
        supplierToggle.setBackground(Color.decode("#4FC36D"));
        reportsToggle.setBackground(Color.decode("#4FC36D"));
        settingsToggle.setBackground(Color.decode("#4FC36D"));
    }

    private void logout() {

        try {
            ResultSet result = UserManager.getLastLogedUser();
            if (result.next()) {

                long currentTime = new java.util.Date().getTime();
                java.sql.Timestamp currentStamp = new java.sql.Timestamp(currentTime);

                if (UserManager.setLogoutToUser(result.getString("iduser_log"), currentStamp)) {

                    Loggers.Log4JTest.exceptionLogger();
                    org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger("Logout");
                    logger.info(result.getString("username") + " logout");
                    Login l = new Login();
                    l.setVisible(true);
                    this.dispose();

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generateDateTime() {

        Thread t = new Thread() {
            @Override
            public void run() {
                try {
                    for (;;) {
                        SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-YYY  HH:mm:ss aa");
                        date_time.setText(sdf.format(new Date()));
                        Thread.sleep(1000);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        };
        t.start();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel accountSettings;
    private javax.swing.JTextField answer1;
    private javax.swing.JTextField answer2;
    private javax.swing.JTextField answer3;
    private javax.swing.JPanel backup;
    private javax.swing.JTextField backupPath;
    private javax.swing.JPanel center_panel;
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JPanel createNewAccount;
    private javax.swing.JLabel date_time;
    private javax.swing.JToggleButton homeToggle;
    private javax.swing.JToggleButton invoiceToggle;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.ButtonGroup mainButtonGroup;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPasswordField newConfirmPassword;
    private javax.swing.JPasswordField newPassword;
    private javax.swing.JPasswordField oldPassword;
    private javax.swing.JPasswordField password;
    private javax.swing.JComboBox<String> question1;
    private javax.swing.JComboBox<String> question2;
    private javax.swing.JComboBox<String> question3;
    private javax.swing.JToggleButton reportsToggle;
    private javax.swing.JTextField restorePath;
    private javax.swing.JDialog settingsDialog;
    private javax.swing.JToggleButton settingsToggle;
    private javax.swing.JPanel slide_panel;
    private javax.swing.JToggleButton stockToggle;
    private javax.swing.JToggleButton supplierToggle;
    private javax.swing.JTextField username;
    private javax.swing.JLabel usernameTitle;
    private com.alee.laf.progressbar.WebProgressBar webProgressBar1;
    // End of variables declaration//GEN-END:variables

    private void clickHomeBtn() {
        loadButtonColor();
        homeToggle.setBackground(Color.decode("#eaf9f4"));
        Home panel = Home.getInstance();
        center_panel.removeAll();
        center_panel.add(panel);
        center_panel.repaint();
        center_panel.revalidate();
        center_panel.setVisible(true);
    }
}
